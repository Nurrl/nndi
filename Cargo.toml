[package]
name = "nndi"
description = "Totally not a NDI protocol implementation in Rust. "
documentation = "https://docs.rs/nndi"
repository = "https://github.com/Nurrl/nndi"
readme = "README.md"
license = "GPL-3.0"
keywords = ["ndi", "sender", "receiver"]
authors = ["Maya the bee <15341887+Nurrl@users.noreply.github.com>"]
version = "0.0.0"
edition = "2021"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[package.metadata.docs.rs]

# Whether to pass `--all-features` to Cargo (default: false)
all-features = true

# Enable unstable features in the documentation
rustdoc-args = ["--cfg", "docsrs"]

[dependencies]
strum = { version = "0.25.0", features = ["derive"] }
tracing = "0.1.40"
thiserror = "1.0.50"

tokio = { version = "1.35.1", features = ["net", "macros", "io-util", "time"] }
futures = { version = "0.3.30", default-features = false, features = ["alloc"] }

flume = { version = "0.11.0", default-features = false }
binrw = "0.13.3"
serde = { version = "1.0.193", features = ["derive"] }
quick-xml = { version = "0.31.0", features = ["serialize"] }

mdns-sd = "0.10.1"
gethostname = "0.4.3"
ffmpeg-next = "6.1.0"
itertools = "0.12.0"
derive_more = "0.99.17"

[dev-dependencies]
tokio = { version = "1.35.1", features = ["rt", "rt-multi-thread"] }
tracing-subscriber = { version = "0.3.18", features = ["env-filter"] }
